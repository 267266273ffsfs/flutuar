-- Serviços
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local lastPosition = character.PrimaryPart and character.PrimaryPart.Position or Vector3.new()

player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = newCharacter:WaitForChild("Humanoid")
    lastPosition = character.PrimaryPart and character.PrimaryPart.Position or Vector3.new()
end)

-- ======================
-- Configurações Emote
-- ======================
local Settings = {}
Settings["Stop On Move"] = true
Settings["Fade In"] = 0.1
Settings["Fade Out"] = 0.1
Settings["Weight"] = 1
Settings["Speed"] = 1
Settings["Time Position"] = 0

local CurrentTrack = nil
local DEMOMAN_LAUGH_ID = "101573394483995" -- novo ID da animação

local function LoadTrack(id)
    if CurrentTrack then 
        CurrentTrack:Stop(Settings["Fade Out"]) 
    end
    
    local animId
    local ok, result = pcall(function() 
        return game:GetObjects("rbxassetid://" .. tostring(id)) 
    end)
    
    if ok and result and #result > 0 then
        local anim = result[1]
        if anim:IsA("Animation") then
            animId = anim.AnimationId
        else
            animId = "rbxassetid://" .. tostring(id)
        end
    else
        animId = "rbxassetid://" .. tostring(id)
    end
    
    local newAnim = Instance.new("Animation")
    newAnim.AnimationId = animId
    local newTrack = humanoid:LoadAnimation(newAnim)
    newTrack.Priority = Enum.AnimationPriority.Action4
    
    local weight = Settings["Weight"]
    if weight == 0 then weight = 0.001 end
    
    newTrack:Play(Settings["Fade In"], weight, Settings["Speed"])
    CurrentTrack = newTrack
    CurrentTrack.TimePosition = math.clamp(Settings["Time Position"], 0, 1) * CurrentTrack.Length
    CurrentTrack.Priority = Enum.AnimationPriority.Action4
    
    return newTrack
end

RunService.RenderStepped:Connect(function()
    if character.PrimaryPart then
        if Settings["Stop On Move"] and CurrentTrack and CurrentTrack.IsPlaying then
            local moved = (character.PrimaryPart.Position - lastPosition).Magnitude > 0.1
            local jumped = humanoid and humanoid:GetState() == Enum.HumanoidStateType.Jumping
            if moved or jumped then
                CurrentTrack:Stop(Settings["Fade Out"])
                CurrentTrack = nil
            end
        end
        lastPosition = character.PrimaryPart.Position
    end
end)

local function playDemomanLaugh()
    LoadTrack(DEMOMAN_LAUGH_ID)
end

local function stopEmote()
    if CurrentTrack then
        CurrentTrack:Stop(Settings["Fade Out"])
        CurrentTrack = nil
    end
end

-- ======================
-- Criar Tool
-- ======================
local tool = Instance.new("Tool")
tool.Name = "Flutuar"
tool.RequiresHandle = false
tool.CanBeDropped = false
tool.Parent = player.Backpack

tool.Activated:Connect(function()
    playDemomanLaugh()
end)

print("✅ Tool somente com animação criada no Backpack!")
